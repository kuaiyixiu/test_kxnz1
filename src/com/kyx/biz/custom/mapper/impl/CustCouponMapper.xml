<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyx.biz.custom.mapper.CustCouponMapper">
  <resultMap id="BaseResultMap" type="com.kyx.biz.custom.model.CustCoupon">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="coupon_id" jdbcType="INTEGER" property="couponId" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="avail_amount" jdbcType="DECIMAL" property="availAmount" />
    <result column="cust_id" jdbcType="INTEGER" property="custId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="source_id" jdbcType="INTEGER" property="sourceId" />
    <result column="source_type" jdbcType="INTEGER" property="sourceType" />
    <result column="coupon_name" jdbcType="VARCHAR" property="couponName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, coupon_id, total_amount, avail_amount, cust_id, create_time, end_time, state, 
    source_id,source_type,coupon_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cust_coupon
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectCouponNameById" parameterType="java.lang.Integer" resultType="java.lang.String">
     select  c.name    from cust_coupon cc left join coupon c on c.id = cc.coupon_id  
    where cc.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cust_coupon
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kyx.biz.custom.model.CustCoupon">
    insert into cust_coupon (id, coupon_id, total_amount, 
      avail_amount, cust_id, create_time, 
      end_time, state, source_id,source_type,coupon_name
      )
    values (#{id,jdbcType=INTEGER}, #{couponId,jdbcType=INTEGER}, #{totalAmount,jdbcType=DECIMAL}, 
      #{availAmount,jdbcType=DECIMAL}, #{custId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{sourceId,jdbcType=INTEGER},#{sourceType,jdbcType=INTEGER}
      ,#{couponName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kyx.biz.custom.model.CustCoupon">
    insert into cust_coupon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="couponId != null">
        coupon_id,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="availAmount != null">
        avail_amount,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="sourceId != null">
        source_id,
      </if>
      <if test="sourceType != null">
        source_type,
      </if>
      <if test="couponName != null">
      coupon_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="couponId != null">
        #{couponId,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="availAmount != null">
        #{availAmount,jdbcType=DECIMAL},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="sourceType != null">
        #{sourceType,jdbcType=INTEGER},
      </if>
      <if test="couponName != null">
      #{couponName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kyx.biz.custom.model.CustCoupon">
    update cust_coupon
    <set>
      <if test="couponId != null">
        coupon_id = #{couponId,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="availAmount != null">
        avail_amount = #{availAmount,jdbcType=DECIMAL},
      </if>
       <if test="addAvailAmount != null">
          avail_amount = avail_amount + #{addAvailAmount,jdbcType=DECIMAL},
      </if>
      <if test="subAvailAmount != null">
          avail_amount = avail_amount - #{subAvailAmount,jdbcType=DECIMAL},
      </if>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null">
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="sourceType != null">
        source_type=#{sourceType,jdbcType=INTEGER},
      </if>
      <if test="couponName != null">
        coupon_name=#{couponName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kyx.biz.custom.model.CustCoupon">
    update cust_coupon
    set coupon_id = #{couponId,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      avail_amount = #{availAmount,jdbcType=DECIMAL},
      cust_id = #{custId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      source_type=#{sourceType,jdbcType=INTEGER},
      coupon_name=#{couponName,jdbcType=VARCHAR},
      source_id = #{sourceId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByResource" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cust_coupon
    where source_id = #{sourceId,jdbcType=INTEGER} and source_type=#{sourceType,jdbcType=INTEGER} order by create_time desc
  </select> 
  <select id="selectByCustId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select 
    cc.*,c.remark
    from cust_coupon cc left join coupon c on c.id = cc.coupon_id  where cc.cust_id = #{custId,jdbcType=INTEGER} and cc.state = 1 and date(cc.end_time) >= CURDATE()  order by cc.id 
  </select>
  <select id="selectCountByCustId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select  count(*)  from cust_coupon cc  where cc.cust_id = #{custId,jdbcType=INTEGER} and cc.state = 1 and date(cc.end_time) >= CURDATE()
  </select>
  <select id="selectCountByCouponId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select count(*) from cust_coupon where coupon_id  =  #{couponId,jdbcType=INTEGER}
  </select>
  
   
 <select id="getList" parameterType="com.kyx.biz.custom.model.CustCoupon" resultMap="BaseResultMap">
    select 
    cc.*,c.remark
    from cust_coupon cc 
    left join coupon c on c.id = cc.coupon_id  where 1=1
   	  <if test="custId != null">
        and cc.cust_id = #{custId,jdbcType=INTEGER}
      </if>
     order by cc.id desc
  </select>
  <select id="getRepList" parameterType="com.kyx.biz.custom.model.CustCoupon" resultMap="BaseResultMap">
    select  cc.* from cust_coupon cc  left join custom c on c.id = cc.cust_id  where 1=1
   	<if test="shopId != null">
      and c.shop_id = #{shopId,jdbcType=INTEGER}
    </if>
    <if test="dateRangeStartTime != null and dateRangeEndTime != null">
      	and (create_time between #{dateRangeStartTime,jdbcType=TIMESTAMP} and #{dateRangeEndTime,jdbcType=TIMESTAMP})
    </if>
     order by cc.create_time asc
  </select>
</mapper>