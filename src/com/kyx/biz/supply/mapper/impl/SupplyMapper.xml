<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyx.biz.supply.mapper.SupplyMapper">
  <resultMap id="BaseResultMap" type="com.kyx.biz.supply.model.Supply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="supply_name" jdbcType="VARCHAR" property="supplyName" />
    <result column="contact_name" jdbcType="VARCHAR" property="contactName" />
    <result column="cellphone" jdbcType="VARCHAR" property="cellphone" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="shop_id" jdbcType="INTEGER" property="shopId" />
    <result column="enabled" jdbcType="INTEGER" property="enabled" />
    <result column="candel" jdbcType="INTEGER" property="candel" />
  </resultMap>
  <sql id="Base_Column_List">
    id, supply_name, contact_name, cellphone, telephone, address, remark, shop_id,enabled,candel
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from supply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from supply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kyx.biz.supply.model.Supply">
    insert into supply (id, supply_name, contact_name, 
      cellphone, telephone, address, 
      remark, shop_id,candel)
    values (#{id,jdbcType=INTEGER}, #{supplyName,jdbcType=VARCHAR}, #{contactName,jdbcType=VARCHAR}, 
      #{cellphone,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{shopId,jdbcType=INTEGER}, #{candel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kyx.biz.supply.model.Supply">
    insert into supply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="supplyName != null">
        supply_name,
      </if>
      <if test="contactName != null">
        contact_name,
      </if>
      <if test="cellphone != null">
        cellphone,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="candel != null">
        candel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="supplyName != null">
        #{supplyName,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null">
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null">
        #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
         #{enabled,jdbcType=INTEGER},
      </if>
      <if test="candel != null">
         #{candel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kyx.biz.supply.model.Supply">
    update supply
    <set>
      <if test="supplyName != null">
        supply_name = #{supplyName,jdbcType=VARCHAR},
      </if>
      <if test="contactName != null">
        contact_name = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null">
        cellphone = #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
         enabled=#{enabled,jdbcType=INTEGER},
      </if>
      <if test="candel != null">
         candel=#{candel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kyx.biz.supply.model.Supply">
    update supply
    set supply_name = #{supplyName,jdbcType=VARCHAR},
      contact_name = #{contactName,jdbcType=VARCHAR},
      cellphone = #{cellphone,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      enabled=#{enabled,jdbcType=INTEGER},
      candel=#{candel,jdbcType=INTEGER},
      shop_id = #{shopId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getInfo" parameterType="com.kyx.biz.supply.model.Supply" resultMap="BaseResultMap">
    select  
    <include refid="Base_Column_List" /> 
    from supply where 1=1 
    <if test="shopId != null">
       and shop_id = #{shopId}
    </if>
    <if test="supplyName != null and supplyName !=''">
      and supply_name like CONCAT(CONCAT('%', #{supplyName}), '%')
    </if>
    <if test="enabled != null">
       and enabled = #{enabled}
    </if>
  </select>
</mapper>