<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyx.biz.orders.mapper.OrdersRoyaltyMapper">
  <resultMap id="BaseResultMap" type="com.kyx.biz.orders.model.OrdersRoyalty">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="kind" jdbcType="INTEGER" property="kind" />
    <result column="orders_dt_id" jdbcType="INTEGER" property="ordersDtId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="shop_id" jdbcType="INTEGER" property="shopId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, kind, orders_dt_id, amount, shop_id, order_id,user_id,quantity,item_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders_royalty
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders_royalty
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByDtId">
    delete from orders_royalty
    where orders_dt_id = #{ordersDtId,jdbcType=INTEGER} and kind = #{kind,jdbcType=INTEGER}
  </delete>
  
  
  <insert id="insertSelective" parameterType="com.kyx.biz.orders.model.OrdersRoyalty">
    insert into orders_royalty
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="kind != null">
        kind,
      </if>
      <if test="ordersDtId != null">
        orders_dt_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="kind != null">
        #{kind,jdbcType=INTEGER},
      </if>
      <if test="ordersDtId != null">
        #{ordersDtId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kyx.biz.orders.model.OrdersRoyalty">
    update orders_royalty
    <set>
      <if test="kind != null">
        kind = #{kind,jdbcType=INTEGER},
      </if>
      <if test="ordersDtId != null">
        orders_dt_id = #{ordersDtId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <delete id="deleteByOrderIdKind">
    delete from orders_royalty   where order_id = #{orderId}
       <if test="kind != null">
        and kind = #{kind,jdbcType=INTEGER}
      </if>
  </delete>
  	
  <insert id="insertBatches"  useGeneratedKeys="true" keyProperty="id" keyColumn="id">
      insert into orders_royalty (kind, orders_dt_id,  amount, shop_id, order_id,user_id,quantity,item_id)values 
      <foreach collection="list" item="item" index="index" separator=",">
      (#{item.kind},#{item.ordersDtId},#{item.amount},#{item.shopId},#{item.orderId},#{item.userId},#{item.quantity},#{item.itemId})
      </foreach>  
  </insert>
  
    <select id="getRoyalList" parameterType="com.kyx.biz.orders.model.OrdersRoyalty" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    	from orders_royalty   where 1=1
      <if test="orderId != null">
        and order_id = #{orderId,jdbcType=INTEGER}
      </if>
      <if test="inKind != null and inKind != '' ">
        and kind in (${inKind})
      </if>
       <if test="kind != null">
        and kind = #{kind,jdbcType=INTEGER}
      </if>
      <if test="ordersDtId != null">
        and orders_dt_id = #{ordersDtId,jdbcType=INTEGER}
      </if>
       <if test="shopId != null">
        and shop_id = #{shopId,jdbcType=INTEGER}
      </if>
       <if test="itemId != null">
        and item_id = #{itemId,jdbcType=INTEGER}
      </if>
  </select>
  
  
    <select id="getUserRoyalList" parameterType="com.kyx.biz.orders.model.OrdersRoyalty" resultMap="BaseResultMap">
    select  	sum(if(r.kind = 1, r.amount, 0)) AS kind1Amt,
				sum(if(r.kind = 2, r.amount, 0)) AS kind2Amt,
				sum(if(r.kind = 3, r.amount, 0)) AS kind3Amt,
				sum(if(r.kind = 1, r.quantity, 0)) AS kind1Qty,
				sum(if(r.kind = 2, r.quantity, 0)) AS kind2Qty,
				sum(if(r.kind = 3, r.quantity, 0)) AS kind3Qty,
				r.user_id from orders_royalty  r  INNER JOIN orders o on o.id = r.order_id where o.order_status in (5,6)
				<if test="dateRangeStartTime != null and dateRangeEndTime != null">
      				and (o.finish_time between #{dateRangeStartTime,jdbcType=TIMESTAMP} and #{dateRangeEndTime,jdbcType=TIMESTAMP})
      			</if>
      			 <if test="shopId != null">
        			and shop_id = #{shopId,jdbcType=INTEGER}
      			</if>
				 GROUP BY r.user_id
  </select>
  
    	<select id="queryUserServeRoy"  parameterType="com.kyx.biz.orders.model.OrdersRoyalty"  resultMap="BaseResultMap">
			select r.item_id,SUM(r.quantity) as quantity ,SUM(r.amount) as amount ,s.serve_name as itemName FROM orders_royalty r INNER JOIN orders o on o.id = r.order_id 
			LEFT JOIN serve s on s.id = r.item_id
			where o.order_status in (5,6)  and o.shop_id=#{shopId,jdbcType=INTEGER} 
			<if test="dateRangeStartTime != null and dateRangeEndTime != null">
      			and (o.finish_time between #{dateRangeStartTime,jdbcType=TIMESTAMP} and #{dateRangeEndTime,jdbcType=TIMESTAMP})
   			</if>
   			<if test="kind != null">
        		and r.kind = #{kind,jdbcType=INTEGER}
      		</if>
      		<if test="userId != null">
        		and r.user_id = #{userId,jdbcType=INTEGER}
      		</if>
			GROUP BY r.item_id ORDER BY r.item_id
  		</select>
  		
    	<select id="queryUserProductRoy"  parameterType="com.kyx.biz.orders.model.OrdersRoyalty"  resultMap="BaseResultMap">
			select r.item_id,SUM(r.quantity) as quantity ,SUM(r.amount) as amount ,p.product_name as itemName,p.product_type as productType
			 FROM orders_royalty r INNER JOIN orders o on o.id = r.order_id 
			LEFT JOIN product p on p.id = r.item_id
			where o.order_status in (5,6)  and o.shop_id=#{shopId,jdbcType=INTEGER} 
			<if test="dateRangeStartTime != null and dateRangeEndTime != null">
      			and (o.finish_time between #{dateRangeStartTime,jdbcType=TIMESTAMP} and #{dateRangeEndTime,jdbcType=TIMESTAMP})
   			</if>
   			<if test="kind != null">
        		and r.kind = #{kind,jdbcType=INTEGER}
      		</if>
      		<if test="userId != null">
        		and r.user_id = #{userId,jdbcType=INTEGER}
      		</if>
			GROUP BY r.item_id ORDER BY r.item_id
  		</select>
  		
  		
  		<select id="queryServeRoyList"  parameterType="com.kyx.biz.orders.model.OrdersRoyalty"  resultMap="BaseResultMap">
  		SELECT r.order_id, r.item_id, r.quantity, r.amount, s.serve_name AS itemName,o.finish_time as finishTime FROM orders_royalty r 
  			INNER JOIN orders o ON o.id = r.order_id 
			LEFT JOIN serve s ON s.id = r.item_id WHERE o.order_status IN (5, 6)  
			and o.shop_id=#{shopId,jdbcType=INTEGER} 
      		<if test="dateRangeStartTime != null and dateRangeEndTime != null">
      			and (o.finish_time between #{dateRangeStartTime,jdbcType=TIMESTAMP} and #{dateRangeEndTime,jdbcType=TIMESTAMP})
   			</if>
			 <if test="kind != null">
        		and r.kind = #{kind,jdbcType=INTEGER}
      		</if>
      		 <if test="userId != null">
        		and r.user_id = #{userId,jdbcType=INTEGER}
      		</if>
      		<if test="itemId != null">
        		and item_id = #{itemId,jdbcType=INTEGER}
      		</if>
      		 ORDER BY o.finish_time desc
  		</select>
  		
  		<select id="queryProductRoyList"  parameterType="com.kyx.biz.orders.model.OrdersRoyalty"  resultMap="BaseResultMap">
  		SELECT  r.order_id, r.item_id, r.quantity, r.amount, p.product_name AS itemName,p.product_type as productType,o.finish_time as finishTime FROM orders_royalty r 
			INNER JOIN orders o ON o.id = r.order_id 
			LEFT JOIN product p ON p.id = r.item_id WHERE o.order_status IN (5, 6)  
			and o.shop_id=#{shopId,jdbcType=INTEGER} 
      		<if test="dateRangeStartTime != null and dateRangeEndTime != null">
      			and (o.finish_time between #{dateRangeStartTime,jdbcType=TIMESTAMP} and #{dateRangeEndTime,jdbcType=TIMESTAMP})
   			</if>
			 <if test="kind != null">
        		and r.kind = #{kind,jdbcType=INTEGER}
      		</if>
      		 <if test="userId != null">
        		and r.user_id = #{userId,jdbcType=INTEGER}
      		</if>
      		  <if test="itemId != null">
        		and item_id = #{itemId,jdbcType=INTEGER}
      		</if>
      		  ORDER BY o.finish_time desc
  		</select>
  		
  		<select id="getOrdersRoyaltyReport" resultMap="BaseResultMap">
  		select SUM(s.quantity * s.price) as amount , r.user_id ,r.kind from orders_royalty r LEFT JOIN orders_serve s on s.id = r.orders_dt_id INNER JOIN orders o on o.id = s.order_id  
		where  1 = 1 and  o.order_status in (5,6) and r.kind in (1,2)   
		<if test="dateRangeStartTime != null and dateRangeEndTime != null">
      			and (o.finish_time between #{dateRangeStartTime,jdbcType=TIMESTAMP} and #{dateRangeEndTime,jdbcType=TIMESTAMP})
   		</if>GROUP BY r.user_id ,r.kind
			UNION ALL
		select SUM(s.quantity * s.price) as amount , r.user_id ,r.kind from orders_royalty r LEFT JOIN orders_product s on s.id = r.orders_dt_id INNER JOIN orders o on o.id = s.order_id  
		where  1 = 1 and  o.order_status in (5,6) and r.kind = 3 
				<if test="dateRangeStartTime != null and dateRangeEndTime != null">
      			and (o.finish_time between #{dateRangeStartTime,jdbcType=TIMESTAMP} and #{dateRangeEndTime,jdbcType=TIMESTAMP})
   		</if>GROUP BY r.user_id ,r.kind;
  		</select>
</mapper>