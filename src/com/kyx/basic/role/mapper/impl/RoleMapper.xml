<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyx.basic.role.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.kyx.basic.role.model.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="role_key" jdbcType="VARCHAR" property="roleKey" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="enable" jdbcType="VARCHAR" property="enable" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, role_key, description, enable
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kyx.basic.role.model.Role">
    insert into role (id, name, role_key, 
      description, enable)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{roleKey,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{enable,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kyx.basic.role.model.Role" useGeneratedKeys="true" keyProperty="id"
          keyColumn="id">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="roleKey != null">
        role_key,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="enable != null">
        enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleKey != null">
        #{roleKey,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kyx.basic.role.model.Role">
    update role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleKey != null">
        role_key = #{roleKey,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kyx.basic.role.model.Role">
    update role
    set name = #{name,jdbcType=VARCHAR},
      role_key = #{roleKey,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getRolesInfo" parameterType="com.kyx.basic.role.model.Role" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where 1=1 and id &gt; 1
    <if test="name != null and name !=''">
    and name like CONCAT(CONCAT('%', #{name}), '%')
    </if>
  </select>
  <select id="getAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role where id &gt; 1 and enable='1'
  </select>
  <select id="queryByRoleKeySingle" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from role
    where role_key = #{roleKey,jdbcType=VARCHAR} limit 1
  </select>
</mapper>